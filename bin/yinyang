#! /usr/bin/env python3

# MIT License
#
# Copyright (c) [2020 - 2021] The yinyang authors
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

import argparse
import sys

#TODO: automatically catch version and commit id
description=""" 
Example:
        yinyang.py "z3" -o sat -s fusion examples/phi1.smt2 examples/phi2.smt2

"""
rootpath = "/".join(__file__.split('/')[:-2])

parser = argparse.ArgumentParser(
        description=description,
        usage="yinyang [options] -o {sat, unsat} <solver_clis> <seeds>",
        formatter_class=argparse.RawDescriptionHelpFormatter
)
parser.add_argument(
    "SOLVER_CLIS",
    metavar="<solver_clis>",
    help="solvers' command-line interfaces for solving .smt2 files" #TODO
)
parser.add_argument(
    "PATH_TO_SEEDS",
    metavar="<seeds>",
    help="path to the seed files/folders"#TODO
)
#TODO: not required
parser.add_argument(
    "-o","--oracle",
    choices=["sat", "unsat"],
    required=True,
    help="set oracle for semantic fusion strategy (default: unknown)" #TODO
)
# parser.add_argument(
    # "-i", "--iterations",
    # type=int,
    # help="the number of iterations on each individual seed. (default: 300 [opfuzz] / 30 [fusion])" #TODO
# )
# parser.add_argument(
    # "-m", "--modulo",
    # type=int,
    # default=2,
    # help="specifies how often the mutants will be forwarded to the SMT solvers. For example, with 300 iterations\
          # and 2 as a modulo, 150 mutants per seed file will be passed to the SMT solvers. High modulo and iteration\
          # counts, prioritize deeper mutations. (default: 2)"
# )

# parser.add_argument(
    # "-logs","--logfolder",
    # default=rootpath+"/logs",
    # help="set logs folder (default: "+rootpath+"/logs)"
# )

# parser.add_argument(
    # "-t", "--timeout",
    # default=8,
    # type=int,
    # help="imposes a timeout limit (in seconds) on each SMT solver for solving  mutant formula (default: 8)" #TODO
# )
# parser.add_argument(
    # "-d", "--diagnose",
    # action='store_true',
    # help="forwards solver outputs to stdout e.g. for solver command line diagnosis" #TODO
# )

# parser.add_argument(
    # "-optfuzz","--optfuzz",
    # default="",
    # help="read solvers' option setting and enable option fuzzing" #TODO
# )
#TODO
# parser.add_argument(
    # "-name","--name",
    # default=random_string(),
    # help="set name of this fuzzing instance (default: random string)"
# )
# parser.add_argument(
    # "-bugs","--bugsfolder",
    # default=rootpath+"/bugs",
    # help="set bug folder (default: "+rootpath+"/bugs)"
# )
# parser.add_argument(
    # "-scratch","--scratchfolder",
    # default=rootpath+"/scratch",
    # help="specifies where the mutant formulas are temporarily stored.\
         # Note, if you run yinyang with several processes in parallel, each\
         # instance should have its own scratch folder. (default:"+rootpath+"/scratch)"
# )

# parser.add_argument(
    # "-fusionfun","--fusionfun",
    # default=rootpath+"/config/fusion_functions.txt",
    # help="set fusion function configuration (default: "+rootpath+"/config/fusion_functions.txt)"
# )
# parser.add_argument(
    # "-km", "--keep-mutants",
    # action='store_true',
    # help="do not delete the mutants from the scratch folder.\
          # Warning: beware that this can quickly exhaust your entire disk space."
# )
# parser.add_argument(
    # "-q", "--quiet",
    # action='store_true',
    # help="do not output statistics and other output"
# )
# parser.add_argument(
    # "-fl", "--file-size-limit",
    # default=100000,
    # type=int,
    # help="file size limit on seed formula in bytes"
# )

if __name__ == "__main__":
   #  if len(sys.argv) == 1:
        # print("yinyang 0.3.0 (dkl34c) -- a fuzzer for SMT solvers\n")
        # args.print_help()

    args = parser.parse_args()
